- selinux:
    policy: targeted
    state: permissive

- name: Install Koji packages
  package:
    name:
    - postgresql-server
    - python-psycopg2
    - koji-hub
    - mod_ssl
    - mod_auth_gssapi
    state: present

- name: initialize postgresql
  command: postgresql-setup initdb
  args:
    creates: /var/lib/pgsql/data/pg_hba.conf
  notify:
  - restart postgresql

- name: configure pg_hba.conf
  copy:
    dest: /var/lib/pgsql/data/pg_hba.conf
    content: |
      host    koji      koji     127.0.0.1/32      trust
      host    koji      koji     ::1/128           trust
      local   all       koji                       peer
      host    all       postgres 127.0.0.1/32      trust
      host    all       postgres ::1/128           trust
      local   all       postgres                   peer
  notify:
  - restart postgresql

- name: make postgresql listen on all ports
  lineinfile:
    dest: /var/lib/pgsql/data/postgresql.conf
    regexp: '^#listen_addresses'
    line: "listen_addresses = '*'"
  notify:
  - restart postgresql

- name: start postgresql
  service:
    name: postgresql
    state: started
    enabled: true

- name: create koji user
  user:
    name: koji
    shell: /bin/bash

- postgresql_user:
    name: koji
    password: test
    #priv: "CONNECT/koji:ALL"
    #login_unix_socket: /var/run/postgresql
  become_user: postgres

- postgresql_db:
    name: koji
    owner: koji
    #login_unix_socket: /var/run/postgresql
  become_user: postgres

- name: check if database for app needs populating
  command: psql -t koji -c "SELECT COUNT(*) FROM permissions;"
  become_user: postgres
  register: database_is_populated
  ignore_errors: true
  changed_when: "database_is_populated.rc != 0"

- name: populate the koji database
  shell: psql koji koji < /usr/share/doc/koji*/docs/schema.sql
  args:
    executable: /bin/bash
  when: "database_is_populated.rc == 1"
  become: yes
  become_user: koji

- name: insert kdreyer as a user
  shell: psql -c "insert into users (name, status, usertype) values ('kdreyer', 0, 0);"
  become: yes
  become_user: koji
  when: "database_is_populated.rc == 1"

- name: grant kdreyer admin rights
  shell: psql -c "insert into user_perms (user_id, perm_id, creator_id) values (1, 1, 1);"
  when: "database_is_populated.rc == 1"
  become: yes
  become_user: koji

- name: grant apache read access to HTTP keytab
  file:
    path: /var/local/HTTP.kojidev.example.com.keytab
    owner: root
    group: apache
    mode: 0640
  notify:
  - restart httpd

- name: copy mod_ssl config
  copy:
    src: files/ssl.conf
    dest: /etc/httpd/conf.d/ssl.conf
    owner: root
    group: root
    mode: 0644
  notify:
  - restart httpd

- name: copy /etc/httpd/conf.d/kojihub.conf
  copy:
    src: files/kojihub.conf
    dest: /etc/httpd/conf.d/kojihub.conf
    owner: root
    group: root
    mode: 0644
  notify:
  - restart httpd

- name: copy /etc/koji-hub/hub.conf
  copy:
    src: files/hub.conf
    dest: /etc/koji-hub/hub.conf
    owner: root
    group: root
    mode: 0644
  notify:
  - restart httpd

- name: start httpd
  service:
    name: httpd
    enabled: true
    state: started

- name: /mnt/koji directories
  file:
    path: /mnt/koji/{{ item }}
    state: directory
    mode: 0755
    owner: apache
    group: apache
  with_items:
    -
    - packages
    - repos
    - work
    - scratch
    - repos-dist

- name: get kerberos ticket
  command: kinit -kt /var/local/kdreyer.keytab kdreyer
  check_mode: no
  # This is the default Kerberos cache, so I've commented it out:
  #environment:
  #  KRB5CCNAME: KEYRING:persistent:0:0

- name: Configure the new builder on the hub
  koji_host:
    koji: kojidev
    name: kojidev.example.com
    arches: [x86_64]
    state: enabled
    channels:
    - default
    - createrepo
  # This is the default Kerberos cache, so I've commented it out:
  #environment:
  #  KRB5CCNAME: KEYRING:persistent:0:0
